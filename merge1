	//получаем массивы
function getArr(length){
	let arr = []
	let min = 1;
	let max = 1000000;
	for(let i=0; i<length; i++){
		item = Math.floor(Math.random() * (max - min)) + min;
		arr.push(item);
	}
	return arr;
}

function sortArr(arr){
	arr.sort((a,b)=>a-b)
	return arr;
}

function getSortArr(length){
	let arr = getArr(length);
	return sortArr(arr);
}

nums1 = getSortArr(100000);
m = nums1.length;
nums2 = getSortArr(100000);
n = nums2.length;
let arr = [];
arr.length = n;
arr.fill(0);
nums1 = [...nums1,...arr]
//получаем массивы

//function merge
function merge(nums1, m, nums2, n){
	nums1.length = m;
	let startIndex = 0;
	for(let item2 of nums2){

		findPlace(startIndex);

		function findPlace(index1=0,index2=nums1.length-1){

				if((index2-index1)/2 > 0.5){
					let position = Math.floor(index1 + (index2-index1)/2)
					if(item2<nums1[position]){
						index2 = position;
						findPlace(index1,index2);
						return;
					}
					if(item2>nums1[position]){
						index1 = position;
						findPlace(index1,index2);
						return;
					}
					if(item2===nums1[position]){
						nums1.splice(position,0,item2);
						startIndex = position;
						return;
					}
				}else if((index2-index1)/2 === 0.5) {
					if(item2<=nums1[index1]){
						nums1.splice(index1,0,item2);
						startIndex = index1;
						return;
					}
					if(item2<=nums1[index2]){
						nums1.splice(index2,0,item2);
						startIndex = index2;
						return;
					}
					if(item2>nums1[index2]){
						nums1.splice(index2+1,0,item2);
						startIndex = index2+1;
						return;
					}
				}else if(!(index2-index1)){
					nums1.push(item2);
					return
				}

		}

	}
}
//function merge
console.log(new String(nums1) , m, new String(nums2) , n)
let start = Date.now();
merge(nums1, m, nums2, n)
let finish = Date.now();
console.log(nums1, m, nums2, n)
console.log(finish-start);
